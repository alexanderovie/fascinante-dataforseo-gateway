# 🚀 FASCINANTE DIGITAL - DEPLOY ELITE
# CI/CD automático para auditoria.fascinantedigital.com

name: 🚀 Deploy Elite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  # 🧪 Test y Build
  test-and-build:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Type check
        run: pnpm type-check

      - name: 🧹 Lint
        run: pnpm lint

      - name: 🎨 Format check
        run: pnpm format:check

      - name: 🏗️ Build
        run: pnpm build
        env:
          DATAFORSEO_USERNAME: ${{ secrets.DATAFORSEO_USERNAME }}
          DATAFORSEO_PASSWORD: ${{ secrets.DATAFORSEO_PASSWORD }}
          API_GATEWAY_SECRET: ${{ secrets.API_GATEWAY_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

  # 🚀 Deploy to Vercel
  deploy-vercel:
    name: 🚀 Deploy to Vercel
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

  # 🌐 Update Cloudflare DNS
  update-dns:
    name: 🌐 Update Cloudflare DNS
    needs: deploy-vercel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.6.0'

      - name: 🌐 Update Cloudflare DNS
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}

      - name: 🚇 Start Cloudflared Tunnels
        run: |
          echo "🚇 Cloudflared tunnels would be managed externally in a production setup."
          echo "For local testing, use ./scripts/start-tunnels.sh"